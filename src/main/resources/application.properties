spring.application.name=integration

spring.datasource.url=jdbc:mysql://localhost:3306/integration?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=${MYSQL_PASSWORD}
#spring.datasource.url=jdbc:mysql://192.168.0.36:3306/integration?createDatabaseIfNotExist=true
#spring.datasource.username=${MYSQL_2_USERNAME}
#spring.datasource.password=${MYSQL_2_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect.storage_engine=innodb

#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.boot=DEBUG
#logging.level.reactor.netty.http.client=DEBUG
#logging.level.org.springframework.web.client.RestTemplate=DEBUG
#logging.level.org.springframework.http=DEBUG
#spring.jpa.show-sql=true

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${GOOGLE_APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#testing.target.email=${TEST_TARGET_EMAIL}

# LinkedIn API configuration
linkedin.api.url=https://linkedin-api8.p.rapidapi.com
rapidapi.key=${RAPIDAPI_KEY}
rapidapi.host=linkedin-api8.p.rapidapi.com
linkedin.u=${LINKEDIN_U}
linkedin.p=${LINKEDIN_P}


# GPT Microservice configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
openai.model=gpt-4o

feign.client.config.linkedinClient.connectTimeout=5000
feign.client.config.linkedinClient.readTimeout=5000

high_performance_mode=false